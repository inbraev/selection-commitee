# Generated by Django 3.2.2 on 2021-05-09 16:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('university', '0002_addressbirth_student'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('republic', models.CharField(default='Кыргызстан', max_length=150, verbose_name='страна')),
                ('region', models.CharField(default='Чуй', max_length=150, verbose_name='область')),
                ('district', models.CharField(default='Аламадунский', max_length=150, verbose_name='регион')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='город')),
                ('village', models.CharField(blank=True, max_length=150, null=True, verbose_name='село')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
            ],
            options={
                'verbose_name': 'Адрес родителей',
                'verbose_name_plural': 'Адрес родителей',
                'db_table': 'address_parent',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='EducationName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
            ],
            options={
                'verbose_name': 'Учебное заведение',
                'verbose_name_plural': 'Учебные заведения',
                'db_table': 'education_name',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='EducationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
            ],
            options={
                'verbose_name': 'Тип учебного заведения',
                'verbose_name_plural': 'Типы учебных заведений',
                'db_table': 'education_type',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Percs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orphan', models.BooleanField(default=False, verbose_name='Круглый сирота')),
                ('ethnical_kyrgyz', models.BooleanField(default=False, verbose_name='Этнический кыргыз')),
                ('care', models.BooleanField(default=False, verbose_name='На попечении')),
                ('invalid', models.BooleanField(default=False, verbose_name='Инвалид 1 или 2 группы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Инвалид',
                'verbose_name_plural': 'Инвалиды',
                'db_table': 'percs',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inn', models.IntegerField(default='23003199920251', verbose_name='ИНН')),
                ('serial_number', models.CharField(default='AN192502', max_length=50, verbose_name='Серия паспорта')),
                ('family_status', models.CharField(choices=[('1', 'Не состоит в браке'), ('2', 'Женат/замужем')], default='1', max_length=50, verbose_name='Семейное положение')),
                ('citizenship', models.CharField(default='Кыргызстан', max_length=150, verbose_name='Гражданство')),
                ('get_date', models.DateField(verbose_name='Дата выдачи')),
                ('issuing_auth', models.CharField(default='MKK 50-55', max_length=150, verbose_name='Кем выдан')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Паспорт',
                'verbose_name_plural': 'Паспорты',
                'db_table': 'passport',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='MilitaryService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(choices=[('1', 'Приписное свидетельство'), ('2', 'Военный билет')], default='1', max_length=50, verbose_name='Документ')),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Серия №')),
                ('name_of_military_regis', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название воинского учета')),
                ('military_registration_date', models.DateField(blank=True, null=True, verbose_name='Дата воинского учета')),
                ('good', models.BooleanField(default=False, verbose_name='Годен к службе')),
                ('special_account', models.BooleanField(default=False, verbose_name='Состоит на спецучете')),
                ('special_account_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='Номер спецучета')),
                ('transferred_to_the_reserve', models.BooleanField(default=False, verbose_name='Уволен в запас')),
                ('rank', models.CharField(blank=True, max_length=150, null=True, verbose_name='Звание')),
                ('military_registration_speciality', models.CharField(blank=True, max_length=150, null=True, verbose_name='Военно-учетная специальность')),
                ('military_registration_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='Номер военно-учетной специальности')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Военный учет',
                'verbose_name_plural': 'Военные учеты',
                'db_table': 'military_service',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='EducationPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('republic', models.CharField(max_length=150, verbose_name='Республика')),
                ('region', models.CharField(max_length=150, verbose_name='Область')),
                ('district', models.CharField(max_length=150, verbose_name='Район')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='Город')),
                ('village', models.CharField(blank=True, max_length=150, null=True, verbose_name='Село')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('educationName', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.educationname', verbose_name='Учебное заведение')),
                ('type_of_education', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.educationtype', verbose_name='Тип учебного заведения')),
            ],
            options={
                'verbose_name': 'Данные об учебном заведении',
                'verbose_name_plural': 'Данные об учебном заведении',
                'db_table': 'education_institution',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_diploma', models.BooleanField(default=False, verbose_name='Оригинал диплома/аттестата')),
                ('excellent_student', models.BooleanField(default=False, verbose_name='Закончил на отлично')),
                ('gold_medal', models.BooleanField(default=False, verbose_name='С золотой медалью')),
                ('prize_winner', models.BooleanField(default=False, verbose_name='Призер олимпиад')),
                ('diploma_or_certificate', models.BooleanField(default=False, verbose_name='Аттестат или диплом (да - аттестат, нет - диплом')),
                ('serial_diploma_or_certificate', models.CharField(max_length=150, verbose_name='Серия диплома/аттестата')),
                ('num_diploma_or_certificate', models.CharField(max_length=150, verbose_name='Номер диплома/аттестата')),
                ('year_of_issue', models.DateField(verbose_name='Год выдачи')),
                ('school_language', models.CharField(choices=[('1', 'Русский'), ('2', 'Кыргызский'), ('2', 'Английский'), ('2', 'Немецкий'), ('2', 'Французский')], default='1', max_length=50, verbose_name='Язык обучения в школе')),
                ('foreign_language', models.CharField(choices=[('1', 'Русский'), ('2', 'Кыргызский'), ('2', 'Английский'), ('2', 'Немецкий'), ('2', 'Французский')], default='3', max_length=50, verbose_name='Иностранный язык')),
                ('out_of_competition', models.BooleanField(default=False, verbose_name='Вне конкурса')),
                ('kstu_student', models.BooleanField(default=False, verbose_name='Учился в этом учебном заведении')),
                ('sport_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Вид спорта')),
                ('sport_document_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='№ документа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('educational_institution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.educationplace', verbose_name='Данные об учебном заведении')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образования',
                'db_table': 'education',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AddressResidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('republic', models.CharField(default='Кыргызстан', max_length=150, verbose_name='страна')),
                ('region', models.CharField(default='Чуй', max_length=150, verbose_name='область')),
                ('district', models.CharField(default='Аламадунский', max_length=150, verbose_name='регион')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='город')),
                ('village', models.CharField(blank=True, max_length=150, null=True, verbose_name='село')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student', verbose_name='абитуриент')),
            ],
            options={
                'verbose_name': 'Место жительства',
                'verbose_name_plural': 'Место жительства',
                'db_table': 'address_residence',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AddressLiving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('republic', models.CharField(default='Кыргызстан', max_length=150, verbose_name='страна')),
                ('region', models.CharField(default='Чуй', max_length=150, verbose_name='область')),
                ('district', models.CharField(default='Аламадунский', max_length=150, verbose_name='регион')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='город')),
                ('village', models.CharField(blank=True, max_length=150, null=True, verbose_name='село')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student', verbose_name='абитуриент')),
            ],
            options={
                'verbose_name': 'Место проживания',
                'verbose_name_plural': 'Место проживания',
                'db_table': 'address_living',
                'ordering': ('created_at',),
            },
        ),
    ]
