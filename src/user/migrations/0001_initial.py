# Generated by Django 3.2.2 on 2021-05-09 17:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import src.user.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('subdivision', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=128, unique=True, verbose_name='почтовый адрес')),
                ('password', models.CharField(max_length=128, verbose_name='пароль')),
                ('is_active', models.BooleanField(default=True, verbose_name='активный пользователь')),
                ('is_staff', models.BooleanField(blank=True, default=True, verbose_name='сотрудник')),
                ('is_superuser', models.BooleanField(blank=True, default=False, verbose_name='администратор')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'usr',
                'ordering': ('created_at',),
            },
            managers=[
                ('objects', src.user.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commissioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='имя')),
                ('second_name', models.CharField(max_length=50, verbose_name='фамилия')),
                ('middle_name', models.CharField(max_length=50, verbose_name='отчество')),
                ('phone', models.CharField(max_length=50, verbose_name='телефон')),
                ('whats_app', models.CharField(blank=True, max_length=50, null=True, verbose_name='whatsapp')),
                ('telegram', models.CharField(blank=True, max_length=50, null=True, verbose_name='telegram')),
                ('instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='instagram')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'Член приемной комиссии',
                'verbose_name_plural': 'Члены приеной комисии',
                'db_table': 'commissioner',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='PermissionCommissioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(choices=[('1', 'Бюджет'), ('2', 'Контракт')], default='1', max_length=50, verbose_name='обучение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('commissioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.commissioner', verbose_name='член комисии')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subdivision.faculty', verbose_name='факультет')),
            ],
            options={
                'verbose_name': 'Доступ пользователя',
                'verbose_name_plural': 'Доступ пользователей',
                'db_table': 'commissioner_permission',
                'ordering': ('created_at',),
            },
        ),
    ]
